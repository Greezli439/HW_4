TUPLES

tuple_a = (1, 2, 3, 4, 5)
tuple_b = (4, 5, 6, 7, 8)
tuple_c = (4, 5, 6, 7, 8, 9, 10, 11)


Задача 1. Використовуючи tuple_a і tuple_b і tuple_c зробити загальний кортеж tuple_d

Очікуваний результат:

tuple_d = (1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 9, 10, 11)



Задача 2. Використовуючи tuple_d згенерувати кортеж res,

де буде кожен елемент це кортеж в якому:

- першим елементом буде елемент з кортежу tuple_d

- другим буде кількість елементів, що зустрічаються в кортежі tuple_d,

за умови що кількість елементів, що зустрічаються > 1

Очікуваний результат:

res = ((4, 3), (5, 3), (4, 3), (5, 3), (6, 2), (7, 2), (8, 2), (4, 3) , (5, 3), (6, 2), (7, 2), (8, 2))



Задача 3. Використовуючи tuple_d згенерувати кортеж res,

де буде кожен елемент це кортеж в якому:

- першим елементом буде елемент з кортежу tuple_d

- другим буде кортеж з індексами елементів які повторюється

Умова: кількість елементів, що повторюються повинно бути більше 1

Очікуваний результат:

res = ((4, (3, 5, 10)), (5, (4, 6, 11)), (6, (7, 12)), (7, (8, 13)), (8, (9, 14)))



LIST

list_a = [1, 2, 3, 4, 5]
list_b = [6, 7, 8, 9, 10]
list_f = [9, 3, 4, 1, 8, 6, 5, 2, 0, 7]


Задача 1. Зробити з двох списків list_a та list_b один

Очікуваний результат:

list_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]





Задача 2. Зробити з двох списків один, елементи двох списком повинні чергуватися

Очікуваний результат:

list_с = [1, 6, 2, 7, 3, 8, 4, 9, 5, 10]



Задача 3. З першого списку зробити список тільки з парними, з другого тільки з непарними

Очікуваний результат:

list_с_a = [2, 4]

list_c_b = [7, 9]



Задача 4. Використовуючи список list_c завдання 1 "розгорнути" список,

що б перший елемент став останнім, а останній першим

Очікуваний результат:

list_d = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]



Задача 5. Використовуючи список list_с і list_d отримати суму елементів попарно

Очікуваний результат:

res = [11, 11, 11, 11, 11, 11, 11, 11, 11, 11]



Задача 6. Використовуючи список list_f отримати два списки один відсортований по зростанню, а один по спаданню

Очікуваний результат:

res1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

res2 = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]



Задача 7. Використовуючи список list_с і list_d отримати список "кортежів" елементів попарно

Очікуваний результат:

res = [(1, 10), (2, 9), (3, 8), (4, 7), (5, 6), (6, 5), (7, 4), (8, 3), (9, 2), (10, 1)]